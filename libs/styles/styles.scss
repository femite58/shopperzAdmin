/* You can add global styles to this file, and also import other style files */
@import '~bootstrap/dist/css/bootstrap.min.css';
@import '~font-awesome/css/font-awesome.min.css';

@font-face {
    font-family: 'Adobe Clean';
    src: url(../assets/fonts/AdobeClean-Regular.otf) format('woff2');
    font-weight: 400;
}

@font-face {
    font-family: 'Adobe Clean';
    src: url(../assets/fonts/AdobeClean-Medium.otf) format('woff2');
    font-weight: 500;
}

@font-face {
    font-family: 'Adobe Clean';
    src: url(../assets/fonts/AdobeClean-BoldSemiCn.otf) format('woff2');
    font-weight: 600;
}

@font-face {
    font-family: 'Adobe Clean';
    src: url(../assets/fonts/AdobeClean-BoldCond.otf) format('woff2');
    font-weight: 700;
}

@font-face {
    font-family: 'Adobe Clean';
    src: url(../assets/fonts/AdobeClean-Bold.otf) format('woff2');
    font-weight: 800;
}

@font-face {
    font-family: 'Adobe Clean';
    src: url(../assets/fonts/AdobeClean-Black.otf) format('woff2');
    font-weight: 900;
}

@font-face {
    font-family: 'Reliq Std';
    src: url(../assets/fonts/ReliqStd-Active.woff2) format('woff2');
}

:root {
    --primary: #f8253a;
    --secondary: #16b05d;
    --activeBg: #ecfdf3;
    --inactiveBg: #f2f4f7;
    --pendingBg: #ffebed;
    --shippedBg: #eaeeff;
    --txtDark: #292931;
    --txtColor: #292931;
    --bodyTxt: #292931;
    --txtLight: #a6a5b2;
    --border: 1px solid #d6d9de;
    --view-height: 100vh;
    --cropper-outline-color: #00000050;
}

html {
    overflow-y: scroll;
}

body {
    font-family: 'Adobe Clean';
    font-size: 14px;
    line-height: 1.215;
    color: var(--txtDark);
}

.formGroup {
    margin-bottom: 20px;

    & > label {
        margin-bottom: 10px;
        color: var(--txtLight);
        display: block;

        &.req {
            &::after {
                content: '*';
                color: #f8253a;
            }
        }
    }

    .errDisp {
        font-size: 13px;
        color: red;
        margin-top: 5px;
    }
}

.priCol {
    color: var(--primary);
}

.secCol {
    color: var(--secondary);
}

.txtLight,
.greyTxt {
    color: var(--txtLight);
}

.priBg {
    background-color: var(--primary);
}

@for $i from 100 through 800 {
    .fw#{$i} {
        font-weight: #{$i};
    }
}

@for $i from 1 through 100 {
    .fs#{$i} {
        font-size: #{$i}px;
    }
    .mb#{$i} {
        margin-bottom: #{$i}px;
    }
    .mt#{$i} {
        margin-top: #{$i}px;
    }
    .ml#{$i} {
        margin-left: #{$i}px;
    }
    .mr#{$i} {
        margin-right: #{$i}px;
    }

    .pb#{$i} {
        padding-bottom: #{$i}px;
    }
    .pt#{$i} {
        padding-top: #{$i}px;
    }
    .pl#{$i} {
        padding-left: #{$i}px;
    }
    .pr#{$i} {
        padding-right: #{$i}px;
    }
}

input,
textarea {
    display: block;
    border-radius: 8px;
    border: var(--border);
    width: 100%;
    height: 45px;
    padding: 13px 20px;
    color: var(--txtDark);
    font-weight: normal;
    outline: none;

    &:focus {
        border-color: var(--primary);
    }

    &.error {
        border-color: red;
    }

    &::placeholder {
        color: var(--txtLight);
    }
}

textarea {
    height: unset;
}

.inputCont {
    position: relative;

    & > *:not(input) {
        position: absolute;
        top: 50%;
        left: 20px;
        transform: translate(0, -50%);

        &:last-child {
            left: unset;
            right: 20px;
        }
    }

    &.preIcon {
        input {
            padding-left: 46px;
        }
    }
}

.vScrlB {
    overflow-y: auto;

    &::-webkit-scrollbar,
    &::-webkit-scrollbar-track {
        width: 5px;
    }

    &::-webkit-scrollbar-thumb {
        background: #e2e2e2;

        &:hover {
            background: #c1c1c1;
        }
    }
}

a {
    text-decoration: none;
}

.pointer {
    cursor: pointer;
}

.txtBtn,
.txtBtnPrim {
    cursor: pointer;
    display: flex;
    text-decoration: underline;
    font-weight: 500;
    align-items: center;
    ::ng-deep svg {
        width: 20px;
        height: auto;
        *[stroke]:not([stroke='none']) {
            stroke: var(--bodyTxt);
        }
        *[fill]:not([fill='none']) {
            fill: var(--bodyTxt);
        }
    }
    &.txtBtnPrim {
        color: var(--primary);
        ::ng-deep svg {
            *[stroke]:not([stroke='none']) {
                stroke: var(--primary);
            }
            *[fill]:not([fill='none']) {
                fill: var(--primary);
            }
        }
    }
}
.delIconBtn {
    width: 26px;
    height: 26px;
    border-radius: 50%;
    background: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 11px;
    right: 11px;
    svg {
        width: 14px;
        height: auto;
        *[stroke]:not([stroke='none']) {
            stroke: red;
        }
        *[fill]:not([fill='none']) {
            fill: red;
        }
    }
}

.primBtn,
.secBtn,
.greyBtn,
.greyOutlineBtn,
.primBtnOutline,
.secBtnOutline {
    height: 40px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    outline: none;
    border: none;
    width: 100%;
    cursor: pointer;
    white-space: nowrap;
    gap: 8px;
    padding: 0 16px;
    font-weight: 500;

    &.primBtn {
        background: var(--primary);
        color: #fff;
        svg {
            *[stroke]:not([stroke='none']) {
                stroke: #fff;
            }
            *[fill]:not([fill='none']) {
                fill: #fff;
            }
        }
    }
    &.primBtnOutline {
        background: #fff;
        color: var(--primary);
        border: 1px solid var(--primary);
    }
    &.secBtn {
        background: var(--pendingBg) !important;
        color: #f8253a !important;
    }

    &.greyOutlineBtn {
        border: var(--border);
        background: #fff;
        svg {
            *[stroke]:not([stroke='none']) {
                stroke: var(--bodyTxt);
            }
            *[fill]:not([fill='none']) {
                fill: var(--bodyTxt);
            }
        }
    }

    &.greyBtn {
        background: #eaeaea;
    }

    &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
}

.cusDropdown {
    position: relative;
    pointer-events: none;
    .clickable {
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 10px;
        pointer-events: all;
    }
    .dropped {
        top: 100%;
        pointer-events: all;
        background: #fff;
        box-shadow: 0px 1px 8px 0px #00000026;
        border-radius: 8px;
        transform-origin: 50% 0;
        transform: scaleY(0);
        transition: 0.3s ease;
        padding: 9px 0;
        position: absolute;
        width: max-content;
        * {
            pointer-events: all;
        }
        &.right {
            right: 0;
            left: unset;
        }
        &.top {
            bottom: 100%;
            top: unset;
            transform-origin: 50% 100%;
        }
        &.dropShow {
            transform: scaleY(1);
            z-index: 20;
        }
        .dropItem {
            cursor: pointer;
            padding: 8px 14px;
            line-height: 1;
            pointer-events: all;
            &:hover {
                background: #f7f7f7;
            }
            // &:hover {
            //     background: #0000000d;
            // }
        }
        hr {
            margin: 5px 0;
        }
        .dropHead {
            padding: 8px 15px;
        }
    }
}

.ellipsis {
    display: block;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

.cusCheck {
    input {
        display: none;
    }

    .checkbox {
        border: var(--border);
        width: 16px;
        height: 16px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;

        i {
            display: none;
            font-size: 9px;
            color: #fff;
        }
    }

    input + label {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    input:checked + label {
        .checkbox {
            background-color: var(--primary);
            border-color: var(--primary);

            i {
                display: block;
            }
        }
    }
}

.status {
    display: flex;
    height: 22px;
    padding: 2px 10px 2px 6px;
    align-items: center;
    gap: 6px;
    width: fit-content;
    border-radius: 16px;
    &.Active,
    &.Complete,
    &.Online {
        background-color: var(--activeBg);
        color: #16b05d;
        & > :first-child {
            display: flex;
            width: 5px;
            height: 5px;
            border-radius: 100%;
            background-color: #16b05d;
            color: #16b05d;
        }
    }

    &.Pending {
        background-color: var(--pendingBg);
        color: var(--primary);
        & > :first-child {
            display: flex;
            width: 5px;
            height: 5px;
            border-radius: 100%;
            background-color: #f8253a;
            color: #f8253a;
        }
    }
    &.Shipped {
        background-color: var(--shippedBg);
        color: #013399;
        & > :first-child {
            display: flex;
            width: 5px;
            height: 5px;
            border-radius: 100%;
            background-color: #013399;
            color: #013399;
        }
    }

    &.Inactive,
    &.Offline {
        background-color: var(--inactiveBg);
        color: #888888;
        & > :first-child {
            display: flex;
            width: 5px;
            height: 5px;
            border-radius: 100%;
            background-color: #888888;
            color: #888888;
        }
    }
    &.Canceled {
        background-color: var(--inactiveBg);
        color: #888888;
        & > :first-child {
            display: flex;
            width: 5px;
            height: 5px;
            border-radius: 100%;
            background-color: #888888;
            color: #888888;
        }
    }
}
.disabled {
    opacity: 0.5;
    cursor: not-allowed !important;
}
